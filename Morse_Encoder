clear all; close all; clc;

SAMPLE_RATE = 8000;
TIME_UNIT = 0.2;
DIT_DURATION = TIME_UNIT * 2;
DAH_DURATION = TIME_UNIT * 4;
ILI_DURATION1 = TIME_UNIT * 1; % intra-Letter interval
ILI_DURATION2 = TIME_UNIT * 2; % inter-Letter interval
IWI_DURATION = TIME_UNIT * 4; % inter-Word interval



dit = ones(1, SAMPLE_RATE * DIT_DURATION);
dah = ones(1, SAMPLE_RATE * DAH_DURATION);
ili1 = zeros(1, SAMPLE_RATE * ILI_DURATION1);
ili2 = zeros(1, SAMPLE_RATE * ILI_DURATION2);
iwi = zeros(1, SAMPLE_RATE * IWI_DURATION);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Letter to Code Function
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

function code = letterToCode(letter)
    conversionTable{1}.letter = 'A'; conversionTable{1}.code = '.-';
    conversionTable{2}.letter = 'B'; conversionTable{2}.code = '-...';
    conversionTable{3}.letter = 'C'; conversionTable{3}.code = '-.-.';
    conversionTable{4}.letter = 'D'; conversionTable{4}.code = '-..';
    conversionTable{5}.letter = 'E'; conversionTable{5}.code = '.';
    conversionTable{6}.letter = 'F'; conversionTable{6}.code = '..-.';
    conversionTable{7}.letter = 'G'; conversionTable{7}.code = '--.';
    conversionTable{8}.letter = 'H'; conversionTable{8}.code = '....';
    conversionTable{9}.letter = 'I'; conversionTable{9}.code = '..';
    conversionTable{10}.letter = 'J'; conversionTable{10}.code = '.---';
    conversionTable{11}.letter = 'K'; conversionTable{11}.code = '-.-';
    conversionTable{12}.letter = 'L'; conversionTable{12}.code = '.-..';
    conversionTable{13}.letter = 'M'; conversionTable{13}.code = '--';
    conversionTable{14}.letter = 'N'; conversionTable{14}.code = '-.';
    conversionTable{15}.letter = 'O'; conversionTable{15}.code = '---';
    conversionTable{16}.letter = 'P'; conversionTable{16}.code = '.--.';
    conversionTable{17}.letter = 'Q'; conversionTable{17}.code = '--.-';
    conversionTable{18}.letter = 'R'; conversionTable{18}.code = '.-.';
    conversionTable{19}.letter = 'S'; conversionTable{19}.code = '...';
    conversionTable{20}.letter = 'T'; conversionTable{20}.code = '-';
    conversionTable{21}.letter = 'U'; conversionTable{21}.code = '..-';
    conversionTable{22}.letter = 'V'; conversionTable{22}.code = '...-';
    conversionTable{23}.letter = 'W'; conversionTable{23}.code = '.--';
    conversionTable{24}.letter = 'X'; conversionTable{24}.code = '-..-';
    conversionTable{25}.letter = 'Y'; conversionTable{25}.code = '-.--';
    conversionTable{26}.letter = 'Z'; conversionTable{26}.code = '--..';
    conversionTable{27}.letter = ' '; conversionTable{27}.code = ' ';

    currentRow = 1;
    while(letter ~= conversionTable{currentRow}.letter && currentRow <= 27)
        currentRow = currentRow + 1;
    end
    code = conversionTable{currentRow}.code;
end


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

textToEncode = 'I AM IRON MUKHESH';  % Example message
textToEncode = upper(textToEncode);  % Ensure message is in upper case

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Main Loop: Encode Message (Build Pulse Wave)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

outputPulse = [];
messageDuration = 0;

for currentCharacter = 1:length(textToEncode)
    if (textToEncode(currentCharacter) >= 'A' && textToEncode(currentCharacter) <= 'Z')
        currentCode = letterToCode(textToEncode(currentCharacter));  % Convert letter to code
        fprintf(1, textToEncode(currentCharacter));  % Print character for debugging
        for currentCodePosition = 1:length(currentCode)
            if (currentCode(currentCodePosition) == '.')
                RandomValue = 1 + rand() / 5;  % Randomize dot length (±20%)
                RandomDotLength = floor(length(dit) * RandomValue);  % Randomize dot length
                RandomDotPulse = ones(1, RandomDotLength);
                outputPulse = [outputPulse RandomDotPulse ili1];  % Add dot to the pulse
                messageDuration = messageDuration + DIT_DURATION + ILI_DURATION1;
                fprintf(1, '.');
            else
                RandomValue = 1 + rand() / 5;  % Randomize dash length (±20%)
                RandomDashLength = floor(length(dah) * RandomValue);  % Randomize dash length
                RandomDashPulse = ones(1, RandomDashLength);
                outputPulse = [outputPulse RandomDashPulse ili1];  % Add dash to the pulse
                messageDuration = messageDuration + DAH_DURATION + ILI_DURATION1;
                fprintf(1, '-');
            end
        end
        outputPulse = [outputPulse ili2];  % Add intra-letter gap
        messageDuration = messageDuration + ILI_DURATION2;
    else
        outputPulse = [outputPulse iwi];  % Add inter-word gap (space)
        messageDuration = messageDuration + IWI_DURATION;
        fprintf(1, '\n');
    end
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Store Encoded Pulse Wave to Disk
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

audiowrite('C:\Users\mukhe\Downloads\morse_code.wav', outputPulse, SAMPLE_RATE);

figure;
t = 0:1/SAMPLE_RATE:messageDuration*2;
plot(t(1:length(outputPulse)), outputPulse, 'r', 'LineWidth', 2);
ylabel('Amplitude', 'FontSize', 14);
xlabel('Time (s)', 'FontSize', 14);
ylim([0 1.5]);
xlim([0 messageDuration]);
title('Morse Pulse Wave', 'FontSize', 14);
% Define Sample Rate (in Hz)
SAMPLE_RATE = 8000;
